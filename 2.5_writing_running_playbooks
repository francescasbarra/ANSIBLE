WRITING AND RUNNING PLAYBOOKS

opzionale, si può iniziare il playbook con --- o finirlo con ...

all'inizio del play si scrive -

#the playbook is defined as a list of plays
The play itself is a collection of "key-value pairs". Keys in the same play should have the same indentation. The following example shows a YAML snippet with three keys. The first two keys have simple values. The third has a list of three items as a value.

  name: just an example
  hosts: webservers
  tasks:
    - first
    - second
    - third

# il playbook è un insieme di coppie chiave-valore

---
- name: Configure important user consistently
  hosts: servera.lab.example.com
  tasks:
    - name: Newbie exists with UID 4000    #name is optional but recommended
      ansible.builtin.user:   #ansible.builtin.user is the module to run for this task
        name: newbie
        uid: 4000
        state: present

-----
#playbook insieme di istruzioni (play), in formato yaml
#play insieme ordinato di tasks da eseguire sugli host specificati dell'inventory
#moduli sono le specifiche attività/comandi da eseguire


# MODULI
sono tools usati per portare a termine task
sono stati scritti centinaia di moduli per eseguire determinate attività
#Ansible Content Collections sono pacchetti contenenti moduli/ ognuno contiene contenuti ansible correlati come moduli e documentazione (creati da core ansible 2.11 in poi)
Il pacchetto ansible-core fornisce un pacchetto chiamato
# ansible.builtin

the default automation execution environment used by ansible-navigator in Red Hat Ansible Automation Platform 2.2, ee-supported-rhel8, includes a number of other Ansible Content Collections

# ansible-navigator collection
per vedere i pacchetti contenuti nell'exec environment
---

Modules are named using fully qualified collection names (FQCNs). This allows the same name to be used for different modules in two Ansible Content Collections without causing conflicts. For example, the copy module provided by the ansible.builtin Ansible Content Collection has ansible.builtin.copy as its FQCN.
# FQCN Fully Qualified Collection Name
es. modulo "copy" nella collection "ansible.builtin" ha come
#FQCN ansible.builtin.copy

----
#IDEMPOTENZA
La maggior parte dei moduli sono idempotenti, il che significa che possono essere eseguiti in sicurezza più volte e, se il sistema è già nello stato corretto, non fanno nulla. Ad esempio, se si esegue la riproduzione dell'esempio precedente una seconda volta, non dovrebbe segnalare alcuna modifica
-------
 
# RUNNING PLAYBOOKS
comando per eseguire playbook
# ansible-navigator run playbook.yaml
ansible-navigator run nome.playbook
ansible-navigator run -m stdout site.yaml
# -m stdout 
se si aggiunge questa opzione l'output viene visualizzato a schermo, altrimenti ansible navigator viene eseguiro in modalità interattiva

--
Quando si esegue il playbook, viene generato un output che mostra la riproduzione e le attività in esecuzione. L'output riporta anche i risultati di ciascuna attività eseguita.
---
Increasing output verbosity
 -v fornisce info in +
---

Prima di eseguire un playbook è buona norma verificare la correttezza della sintassi:
# ansible navigator --syntax-check
ansible-navigator run -m stdout webserver.yml --syntax-check

----
# DRY-RUN (--check)
si può eseguire un playbook anche in dry-run, in check mode, il playbook non viene effttivamente eseguito ma vengono riportate le modifiche nel caso in cui venga eseguito il playbook, è una sorta di simulazione senza effetti.
---

# ansible-navigator doc :help documentazione dei moduli, info ed esempi
------------------------------------------

#QUESTO ESEMPIO VERIFICA CHE  NEGLI INVENTORY HOST DEL GRUPPO SPECIFICATO
#CI SIA IL PACCHETTO HTTPD,
#SIA PRESENTE IL CORRETTO FILE INDEX.HTML
#SIA STARTATO E ABILITATO IL SERVIZIO HTTPD

---
- name: Install and start Apache HTTPD
  hosts: web
  tasks:
    - name: Ensure httpd package is present
      ansible.builtin.dnf:
        name: httpd
        state: present

    - name: Correct index.html is present
      ansible.builtin.copy:
        src: files/index.html
        dest: /var/www/html/index.html

    - name: Ensure httpd is started
      ansible.builtin.service:
        name: httpd
        state: started
        enabled: true


IMPORTANT spazio dopo :
--------------------------------------------

# WRITING MULTIPLE PLAYS

un playbook può contenere + play, ogni play potrebbe applicare i propri task a diversi hosts, appena finisce uno inizia l'altro
-------------

# Remote Users and Privilege Escalation in Plays

I play possono usare REMOTE USER e impostazioni di ESCALATION DEI PRIVILEGI  diverse da quelle indicate nel file di configurazione ansible.
è possibile indicare queste modifiche che riguardano solo il play nel play stesso, al livello di 'hosts' e 'tasks'

#User Attributes

Le attività nei playbook vengono normalmente eseguite tramite una connessione di rete agli host gestiti. Ansible deve connettersi a ciascun host come utente per eseguire tali attività.

#di default, se si utilizza ansible-navigator run per eseguire un playbook, Ansible si connette all'host gestito come utente corrente all'interno dell'ambiente di esecuzione dell'automazione, root.
If you run an Ansible command that does not use execution environments, such as ansible-playbook, then by default Ansible tries to authenticate to the remote managed host using the username of the account you used to run the command.

# remote_user 
per impostare l'utente con cui connettersi agli host nel file di configurazione ANSIBLE.CFG

se necessario poi eseguire le attività come utente ROOT si può usare l'ESCALATION DEI PRIVILEGI PER PASSARE A ROOT DOPO LA CONNESSIONE INIZIALE
remote_user si può inserire anche specificare nei vari play
remote_user: remoteuser

------

IMPORTANT 
Ansible determines which user account to use when connecting to a managed host based on the following list, selecting the first username it finds in this order:

#The ansible_user variable set for the host or group, if set.

#The remote_user from the current play, if set.

#The remote_user from the ansible.cfg configuration file, if set.

If no value has been set for any of the preceding settings, and you are running playbooks by using ansible-navigator with an execution environment, Ansible uses root. (If you are using ansible-playbook, Ansible uses the name of the user that ran the command.)

----------

# PRIVILEGE ESCALATION ATTRIBUTES
si possono configurare anche nei singoli play come nel
#file di config ansible.cfg

[defaults]
inventory = ./inventory 
remote_user = user 
ask_pass = false

[privilege_escalation]
become = true           #per abilitare/disabilitare p.e. (si può usare true/yes e false/no e simili
become_method = sudo    #modalità escalation/accesso sudo 
become_user = root      #per definire l'utente da usare per p.e.nel play
become_ask_pass = false 


# ESEMPIO

- name: /etc/hosts is up-to-date
  hosts: datacenter-west
  remote_user: automation
  become: true

  tasks:
    - name: server.example.com in /etc/hosts
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: '192.0.2.42 server.example.com server'
        state: present


------------

# ansible-navigator doc -l
elenca i moduli disponibili nell execution environment con info
# ansible-navigator doc -l nome.modulo
dà info dettagliate sul modulo


# ansible-navigator collection list  (modalità interattiva, formato YAML)
elenca le collezioni disponibili nell exec env con i moduli associati
(non interattiva= ansible-navigator collection list -m stdout, visualizza output a video)

Important
The ansible-navigator doc -l command displays the short names of modules in the ansible.builtin Ansible Content Collection instead of their FQCNs.

---------------

# Running Arbitrary Commands on Managed Hosts
se non esistono moduli per automatizzare il task desiderato si possono usare moduli speciali che eseguono comandi arbitrari direttamente sugli host
# ansible.builtin.command
cmd : per specificare il comando da eseguire

- name: Run the /opt/bin/makedb.sh command
  ansible.builtin.command:
    cmd: /opt/bin/makedb.sh
 
important ansible.builtin.command non è idempotente

Puoi provare a rendere l'attività più sicura configurandola in modo che venga eseguita solo in base all'esistenza di un file.
# L'opzione "creates" fa sì che l'attività venga eseguita solo se manca un file; il presupposto è che, se l'attività viene eseguita, crei quel file. L'opzione "removes" fa sì che l'attività venga eseguita solo se un file è presente; il presupposto è che, se l'attività viene eseguita, rimuova quel file

For example, the following task only runs if /opt/db/database.db is not present:

- name: Initialize the database
  ansible.builtin.command:
    cmd: /opt/bin/makedb.sh
    creates: /opt/db/database.db

---------------
il modulo "command" non può accedere alle var d'ambiente della shell nè eseguire operazioni shell come indirizzamento output, pipeline, ecc
Quando è necessario eseguire elaborazione shell si usa il comando 
# ansible.builtin.shell 
anche in questo caso i comandi da eseguire vengono passati come argomenti del modulo

- name: Non-idempotent approach with shell module
  ansible.builtin.shell:
    cmd: echo "nameserver 192.0.2.1" > /etc/resolv.conf


Questi moduli richiedono python installato, in caso contratio si può usare il modulo
# ansible.builtin.raw
che esegue comandi usando direttamente shell remota
(può essere amche usato per scaricare python su hosts)



----------

# YAML files are structured using space indentation to represent the data hierarchy.



# YAML Syntax
possono essere usati anche i commenti # per dare maggiore leggibilità
Le stringhe in YAML normalmente non devono essere racchiuse tra virgolette, anche se non contengono spazi. È possibile racchiudere le stringhe tra virgolette doppie o singole.

#chiavi-valore possono essere espressi sia indentati che su un'unica riga (meno leggibile però)
name: svcrole
  svcservice: httpd
  svcport: 80

diventa
  {name: svcrole, svcservice: httpd, svcport: 80}


-------------

# YAML Lists
You have also seen lists written with the normal single-dash syntax:

  hosts:
    - servera
    - serverb
    - serverc
Lists also have an inline format enclosed in square braces, as follows:

hosts: [servera, serverb, serverc]



----------




--------------






