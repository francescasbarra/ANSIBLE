# THROUBLESHOOTING ANSIBLE

# Troubleshooting Playbooks

# Debugging Playbooks

L'output del comando ansible-navigator run è già un buon punto di partenza per risolvere i problemi dei playbook

# i risultati dei tasks possono essere:
'ok'
'fatal'
'changed'
'skipped'

'PLAY RECAP' mostra il numero di task eseguiti per ogni host in base al risultato del task

PLAY RECAP *********************************************************************
demoservera    : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
demoserverb    : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0


è possibile aumentaare il dettaglio dell output ('verbosity') aggiungendo l'opzione -v dopo ansible navigator run

ansible navigator run -v
 -vv -vvv -vvvv


-----------

# Examining Values of Variables with the Debug Module

modulo 'ansible.builtin.debug'

per ottenere info su quanto accade nel play
per visualizzare il valore di una det variabile in un punto specifico del play
Questo può aiutare a eseguire il debug di attività che utilizzano variabili per comunicare tra loro (ad esempio, utilizzando l output di un'attività come input per quella successiva).

Il modulo ansible.builtin.debug serve semplicemente per stampare messaggi a video durante l'esecuzione di un playbook Ansible. È utile per mostrare il valore di variabili o dare informazioni su cosa sta succedendo.

- name: Display free memory
  ansible.builtin.debug:
    msg: "Free memory for this system is {{ ansible_facts['memfree_mb'] }}"


- name: Display the "output" variable
  ansible.builtin.debug:
    var: output
    verbosity: 2

# This second example displays the value of the output variable.


# Reviewing Playbooks for Errors

Possono verificarsi diversi problemi durante l'esecuzione di un playbook, molti dei quali sono correlati alla sintassi del playbook o di uno qualsiasi dei modelli utilizzati, oppure dovuti a problemi di connettività con gli host gestiti (ad esempio, un errore nel nome host dell host nell inventory).

ci sono diversi tool per revisionare il playbook ed individiare gli errori:

# Checking Playbook Syntax for Problems
'--syntax-check'
ansible-navigator run -m stdout playbook.yml --syntax-check

verifica la presenza di errori di sintassi anzichè eseguire effettivamente il playbook

# Checking a Given Task in a Playbook
'--step' ti fa decidere se eseguire o skippare il task
ansible-navigator run -m stdout playbook.yml --step --pae false  

# Richiede in modo interattivo la conferma dell'esecuzione di ogni attività. 
Premi Y per confermare l esecuzione dell'attività, N per saltarla o C per continuare l esecuzione delle attività rimanenti

Important
Because Ansible prompts you for input when you use the --step option, you must disable playbook artifacts and use standard output mode.


'pae = playbook artifact enable'
Se metti false, Ansible Navigator non salva un file di artifact (cioè un file JSON con i dettagli dell'esecuzione del playbook).

In breve:
➡️ --pae false = non crea il file di salvataggio dell'esecuzione.


'--start-at-task'
ansible-navigator run -m stdout playbook.yml --start-at-task "Ensure webservice is started"

per iniziare il playbook da uno specifico task

'ansible-navigator run --list-task' per fare la lista dei task nel playbook


# Checking Playbooks for Issues and Following Good Practices

- dare un nome breve e descrittivo ai play/task
- usare i commenti per dare + info 
- usare al meglio gli spazi per facilitare leggibilità
- fare attenzione agli spazi/indentazione
- mantenere il playbook + semplice possibile, usare funzionalità necessarie


'ansible-lint'
ansible-lint playbook.yml

utilizza un insieme di regole predefinite per individuare possibili problemi nel tuo playbook. Non tutti i problemi segnalati interrompono il playbook, ma un problema segnalato potrebbe indicare la presenza di un errore più grave.



'ansible-lint playbook.yml'
controlla in modo + approfondito rispetto a --syntax-check


Important
The ansible-lint command evaluates your playbook based on the software on your workstation. It does not use the automation execution environment container that is used by ansible-navigator.

[...]

(non è ufficialmente supportato)
-----------------


# Reviewing Playbook Artifacts and Log Files

# Ansible può registrare (log) l'output dei playbook in diversi modi:
- ansible-navigator può produrre 'playbook artifacts' che memorizzano informazioni sull'esecuzione dei playbook in formato json
- log delle info in file di testo


# Playbook Artifacts from Automation Content Navigator

Ansible-navigator produce 'playbook artifacts file' ogni volta che viene eseguito un playbook. Questi file registrano info sull esecuzione dei playbook e possono essere usati per controllare i risultati alla fine dell esecuzione, per risolvere problemi ('troubleshooting') o per scopi di conformità

il nome dei 'playbook artifacts files' è formato dal nome de 
# nome_playbook + artifact + time spamp + json extension

For example, if you run the command ansible-navigator run site.yml at 20:00 UTC on July 22, 2022, the resulting file name of the artifact file could be:

# site-artifact-2022-07-22T20:00:04.019343+00:00.json

# si può esaminare il contenuto di questi file con il comando, per rivedere l'esecuzione del play
'ansible-navigator replay' -m stdout

-------------------

Important
You might not want to save playbook artifacts for several reasons.

You are concerned about sensitive information being saved in the log file.

You need to provide interactive input, such as a password, to ansible-navigator for some reason.

You do not want the files to clutter up the project directory.

# You can keep the files from being generated by creating an ansible-navigator.yml file in the project directory that disables the playbook artifacts:

ansible-navigator:
  playbook-artifact:
    enable: false



------------------------------

# Logging Output to a Text File

Ansible fornisce una infrastruttura di registrazione integrata che può essere configurata tramite il parametro 'log_path' nella sezione 'default' del file di configurazione ansible.cfg oppure tramite la variabile d'ambiente $ANSIBLE_LOG_PATH.

# (la var d'ambiente ha precedenza se entrambi sono configurati)

 Se è configurato un percorso di logging, Ansible memorizza l'output dei comandi di ansible-navigator come testo nel file specificato. 

# If you configure Ansible to write log files to the /var/log directory, then Red Hat recommends that you configure 'logrotate' to manage them.


Ansible ha un meccanismo interno per creare file di log (registri), che puoi attivare impostando il 'parametro log_path' nella sezione default del file di configurazione ansible.cfg. In alternativa, puoi usare la variabile d'ambiente $ANSIBLE_LOG_PATH per specificare il percorso del file di log.


Se imposti un percorso per il file di log, Ansible salverà l'output dei comandi (ad esempio da ansible-navigator o ansible-playbook) in formato testo nel file indicato.

Questo sistema funziona anche con i vecchi strumenti, come ansible-playbook, non solo con ansible-navigator.


