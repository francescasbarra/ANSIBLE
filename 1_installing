INSTALLING ANSIBLE


# Ansible va installato su un solo computer, l'ansible controller
#
# Ansible si connette agli hosts usando il protocollo SSH ed esegue comandi per assicurarsi che siano nello stato desiderato


Per installare Ansible necessario RHEL da 8.2 in poi e Python 3 da versione 3.5 o Python 2 da 2.7
Python anche sugli hosts da controllare

-----------------
# [student@workstation ~]$ sudo yum install ansible
# [student@workstation ~]$ ansible --version  #per verificare che sia installato
#




# ANSIBLE-CORE
software da installare
√® la parte centrale di Ansible, il motore che esegue i comandi, i moduli e i playbook per automatizzare attivit√† su sistemi remoti.

Ansible Core provides the fundamental functionality used to run Ansible Playbooks. It defines the automation language that is used to write Ansible Playbooks in YAML text files. It provides the key functions such as loops, conditionals, and other Ansible imperatives needed for automation code. It also provides the framework and basic command-line tools to drive automation.


# COMMUNITY ANSIBLE


# INSTALLAZIONE DA REPOSITORY RED HAT



Ansible Playbooks are human-readable text files that describe the "desired state" of an IT infrastructure.

# PLAYBOOK FILE
In Ansible, i 'playbook' sono dei file in formato YAML che contengono una serie di istruzioni ('play') per automatizzare compiti su server o macchine remote. Ogni play descrive cosa deve essere fatto su un gruppo di host, ad esempio installare un software, configurare un servizio o copiare dei file.


un file yaml con tutte le istruzioni di configurazione e automazione
"PLAYBOOK" costituito da uno o + "play" nei quali ci sono i "task"

'playbook' file di testo che descrive lo stato desideraro di un'infrastruttura IT


#PLAY 
Un play √® una sezione del playbook che descrive un insieme di azioni da eseguire su uno o pi√π host. 

Ogni play in un playbook specifica quale gruppo di host (macchine) deve essere gestito e quale serie di attivit√† ("task") deve essere eseguita su di essi.



"play" 1
   "task"
      per esecuzione moduli
"play" 2
"play" 3


task esecuzione di un modulo

modulo si pu√≤ lanciare sia da riga di comando che nel manifest

Un "play" √® una struttura che definisce su quali host eseguire delle attivit√† e cosa fare su di essi.

Un "modulo" √® un'azione specifica che esegue un compito concreto, come installare software, copiare file, avviare servizi, ecc.

# Un play pu√≤ contenere pi√π attivit√† (task), e ogni attivit√† usa uno o pi√π moduli per eseguire azioni sui server.


--------------------------

# MODULI  
sono dei piccoli programmi che svolgono compiti specifici su una macchina, come ad esempio installare un pacchetto, copiare un file, riavviare un servizio, ecc / installare software, creare files, gestire servizi

Ogni modulo √® progettato per eseguire una singola azione e pu√≤ essere utilizzato all'interno di un playbook Ansible per automatizzare diverse attivit√†. Ad esempio:

- Il modulo `apt` serve per gestire i pacchetti su sistemi basati su Debian (come Ubuntu).
- Il modulo `copy` copia un file da una macchina locale a una macchina remota.
- Il modulo `service` avvia, ferma o riavvia un servizio.

Quando esegui un playbook, Ansible utilizza questi moduli per fare in modo che le macchine target eseguano le operazioni richieste. Ogni modulo ha una propria sintassi e opzioni che definiscono come deve essere eseguita l'azione.

# come funzionano
ansible invia un modulo alla macchina target, lo esegue (via ssh o altro) e restituisce il risultato
sono gi√† inclusi in ansible, basta chiamarli nei playbook o da riga di comando 
# ansible -m <nome_modulo>


-------------------


#CONNECTION plug in
specificano come ci connettiamo all'INVENTORY, facilitano la connessione
connessione tra ansible controller e altri sistemi da automatizzare
SSH default connection plugin

------------------


#INVENTORY
'static and dynamic inventory'
√® un file che elenca tutti gli host (server o macchine) su cui Ansible deve eseguire le operazioni.
Pu√≤ essere un semplice file di testo ('inventory statico' solitamente in formato INI o YAML) o pu√≤ essere "dinamico" (ad esempio, una sorgente che genera l'elenco degli host in tempo reale).

L'inventory definisce anche i gruppi di host (per esempio, tutti i server web, tutti i database) e pu√≤ includere variabili specifiche per ogni host o gruppo di host.

------------------

# BECOME plugin 
ci permette di impostare privilegi per gli utenti 
# In Ansible, la direttiva "become" serve per eseguire comandi con privilegi elevati, tipicamente come utente root.

Nel file di configurazione "ansible.cfg" (o anche in un inventario o playbook), puoi usare become = true per dire ad Ansible di usare il privilege escalation (ad esempio con sudo), senza doverlo specificare ogni volta nei playbook.

esempio

[privilege_escalation]
become = true
become_method = sudo
become_user = root
--

become = true: abilita l‚Äôelevazione dei privilegi.

become_method = sudo: usa sudo per cambiare utente (default).

become_user = root: diventa l‚Äôutente root (default).


------------------

#VARIABLE plugin


---------------

# LOOKUP plug in
cerca info, serve per recuperare dati esterni e usarli nei playbook 


---------------


#SATELLITE
ha la lista aggiornata dei server 
nodo "satellite" rispetto al server centrale che gestisce l'automazione 
macchina gestita da Ansible che esegue i compiti assegnati dal server principale (master).

In pratica, Ansible usa un sistema di "nodi" (che possono essere server, macchine virtuali o dispositivi) su cui eseguire i compiti. I nodi vengono definiti nel file inventario di Ansible, e possono essere considerati "satelliti" che ricevono istruzioni dal "server centrale" che esegue il controllo dell'automazione.

# Satellite √® una piattaforma di gestione e automazione che utilizza Ansible per rendere l'amministrazione dei sistemi pi√π semplice ed efficiente, soprattutto in ambienti Red Hat.

In ambito Ansible, Satellite si riferisce a Red Hat Satellite, che √® una soluzione di gestione della configurazione, distribuzione e manutenzione di sistemi basata su Ansible. √à una piattaforma che fornisce funzionalit√† avanzate per l'automazione della gestione di sistemi, in particolare in ambienti Red Hat (come RHEL - Red Hat Enterprise Linux).

Red Hat Satellite offre:

Gestione centralizzata: Permette di gestire centinaia o migliaia di server in modo centralizzato, utilizzando playbook e moduli Ansible per automatizzare la configurazione e la manutenzione.

Automazione con Ansible: Satellite integra Ansible per l'automazione delle operazioni di gestione dei sistemi, come l'installazione di pacchetti, la configurazione di servizi, e l'applicazione di patch.

Gestione dei contenuti e delle configurazioni: Satellite aiuta a distribuire i pacchetti software e gli aggiornamenti sui sistemi gestiti, e consente di mantenere coerenza nelle configurazioni tra i server.

# Gestione dell'inventory: In Satellite, gli host vengono automaticamente organizzati e gestiti, e possono essere configurati tramite playbook Ansible basati su gruppi di macchine.

# Ansible richiede a Satellite la lista dei server collegati da gestire


# Red Hat Satellite √® usato  per gestire i sistemi (host) e orchestrare le attivit√† tramite Ansible,
# usando il Controller (cio√® il nodo da cui parte l'automazione).


Componenti coinvolti:
#Ansible Controller:
√à il nodo da cui esegui i playbook e controlli i target (sistemi gestiti).

#Red Hat Satellite:
√à una piattaforma per:

gestire sistemi Red Hat

distribuire pacchetti

applicare patch

tenere traccia dell‚Äôinventario

e anche integrare Ansible

#üîÑ Come funziona l‚Äôintegrazione:
Satellite raccoglie l‚Äôinventario degli host registrati.

Puoi associare ruoli Ansible agli host direttamente da Satellite.

Il Controller Ansible esegue i playbook o ruoli su quegli host.

Satellite pu√≤ usare Ansible come motore di configurazione, senza bisogno di Puppet o altri tool.

#üõ†Ô∏è Esempio pratico:
Hai 10 server registrati su Satellite.

Assegni a un gruppo di server un ruolo Ansible (es. installare Apache).

Satellite passa le info al nodo Controller Ansible, che esegue le attivit√† su quei server via SSH.

#‚úÖ Vantaggi:
Centralizzi tutto (inventory, ruoli, aggiornamenti).

Tracci tutto da un‚Äôinterfaccia web (Satellite).

Automatizzi in modo coordinato e sicuro.



--------------------


